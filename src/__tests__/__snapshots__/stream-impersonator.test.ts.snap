// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StreamImpersonator does not impersonate on invalid token 1`] = `
"POST / HTTP/1.1
accept: application/json
authorization: Bearer invalid.token.is
content-type: application/json
content-length: 11

hello world"
`;

exports[`StreamImpersonator does not remove crlf+whitespace from body 1`] = `
"GET / HTTP/1.1
accept: application/json
content-type: application/json
cache-control: max-age=0
content-length: 8
authorization: Bearer service-account-token
impersonate-user: johndoe
impersonate-group: dev
impersonate-group: ops

foo
bar"
`;

exports[`StreamImpersonator handles all body and headers splitted to separate chunks 1`] = `
"POST / HTTP/1.1
accept: application/json
content-type: application/json
content-length: 24
authorization: Bearer service-account-token
impersonate-user: johndoe

first chunk second chunk"
`;

exports[`StreamImpersonator handles binary data in body 1`] = `
"POST / HTTP/1.1
accept: application/json
content-type: application/octet-stream
content-length: 10
authorization: Bearer service-account-token
impersonate-user: johndoe

BarÄö"
`;

exports[`StreamImpersonator handles binary data in body one byte at a time 1`] = `
"POST / HTTP/1.1
accept: application/json
content-type: application/octet-stream
content-length: 4
authorization: Bearer service-account-token
impersonate-user: johndoe

Äö"
`;

exports[`StreamImpersonator handles body separator splitted to separate chunks 1`] = `
"GET / HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer service-account-token
impersonate-user: johndoe

"
`;

exports[`StreamImpersonator handles headers and body in same stream chunk 1`] = `
"POST / HTTP/1.1
accept: application/json
content-type: application/json
content-length: 24
authorization: Bearer service-account-token
impersonate-user: johndoe

first chunk second chunk"
`;

exports[`StreamImpersonator handles headers in one chunk, body in another 1`] = `
"POST / HTTP/1.1
accept: application/json
content-type: application/json
content-length: 24
authorization: Bearer service-account-token
impersonate-user: johndoe

first chunk second chunk"
`;

exports[`StreamImpersonator handles http request pipelining 1`] = `
"GET /foo HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer service-account-token
impersonate-user: johndoe

GET / HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer service-account-token
impersonate-user: johndoe

GET /version HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer service-account-token
impersonate-user: johndoe

GET /foo HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer service-account-token
impersonate-user: johndoe

GET /foo HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer service-account-token
impersonate-user: johndoe

"
`;

exports[`StreamImpersonator handles newline splitted to separate chunks 1`] = `
"GET / HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer service-account-token
impersonate-user: johndoe

"
`;

exports[`StreamImpersonator handles non GET pipelined requests 1`] = `
"GET /version HTTP/1.1
host: 127.0.0.1:54642
user-agent: kubectl/v1.21.2 (darwin/amd64) kubernetes/092fbfb
accept: application/json
content-type: application/json
x-forwarded-for: 127.0.0.1
accept-encoding: gzip
authorization: Bearer service-account-token
impersonate-user: johndoe

POST /apis/authorization.k8s.io/v1/selfsubjectaccessreviews HTTP/1.1
host: 127.0.0.1:54642
user-agent: kubectl/v1.21.2 (darwin/amd64) kubernetes/092fbfb
content-length: 162
accept: application/json
content-type: application/json
x-forwarded-for: 127.0.0.1
accept-encoding: gzip
authorization: Bearer service-account-token
impersonate-user: johndoe

{"apiVersion":"authorization.k8s.io/v1","kind":"SelfSubjectAccessReview","spec":{"resourceAttributes":{"namespace":"kube-system","resource":"*","verb":"create"}}}"
`;

exports[`StreamImpersonator handles port-forward upgrade 1`] = `
"POST /apis/authorization.k8s.io/v1/selfsubjectaccessreviews HTTP/1.1
accept: application/json
content-type: application/json
connection: Upgrade
authorization: Bearer service-account-token
impersonate-user: johndoe

GET /version HTTP/1.1
Accept: application/json
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c

POST /foo HTTP/1.1
Accept: application/json
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c

barGET /foo HTTP/1.1
Accept: application/json
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c

"
`;

exports[`StreamImpersonator impersonates groups on valid jwt token 1`] = `
"GET / HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer service-account-token
impersonate-user: johndoe
impersonate-group: dev
impersonate-group: ops

"
`;

exports[`StreamImpersonator impersonates on valid jwt token 1`] = `
"GET / HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer service-account-token
impersonate-user: johndoe

"
`;

exports[`StreamImpersonator transfer encoding chunked 1`] = `
"GET /version HTTP/1.1
host: 127.0.0.1:53364
user-agent: node-fetch
accept: */*
accept-encoding: gzip, deflate, br
x-forwarded-for: 127.0.0.1
authorization: Bearer service-account-token
impersonate-user: johndoe
impersonate-group: dev
impersonate-group: ops

POST /apis/authorization.k8s.io/v1/selfsubjectaccessreviews HTTP/1.1
host: 127.0.0.1:53364
user-agent: node-fetch
transfer-encoding: chunked
accept: */*
accept-encoding: gzip, deflate, br
content-type: application/json
x-forwarded-for: 127.0.0.1
authorization: Bearer service-account-token
impersonate-user: johndoe
impersonate-group: dev
impersonate-group: ops

b0
{"spec":{"resourceAttributes":{"namespace":"kube-system","resource":"*","verb":"create"}},"kind":"SelfSubjectAccessReview","apiVersion":"authorization.k8s.io/v1","metadata":{}}
0

"
`;
